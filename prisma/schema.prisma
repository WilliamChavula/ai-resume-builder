generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL_NON_POOLING")
}

model Resume {
  id             String           @id @default(cuid(2))
  userId         String           @map("user_id")
  firstName      String?          @map("first_name")
  lastName       String?          @map("last_name")
  email          String?
  phone          String?
  city           String?
  country        String?
  jobTitle       String?          @map("job_title")
  title          String?
  description    String?
  skills         String[]
  photoUrl       String?          @map("photo_url")
  colorHex       String           @default("#000000") @map("color_hex")
  borderStyle    String           @default("squircle") @map("border_style")
  summary        String?
  createdAt      DateTime         @default(now()) @map("created_at")
  updatedAt      DateTime         @updatedAt @map("updated_at")
  workExperience WorkExperience[]
  education      Education[]

  @@map("resumes")
}

model WorkExperience {
  id          String    @id @default(cuid(2))
  resumeId    String    @map("resume_id")
  resume      Resume    @relation(fields: resumeId, references: [id])
  position    String?
  company     String?
  startDate   DateTime? @map("start_date")
  endDate     DateTime? @map("end_date")
  description String?
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")

  @@map("work_experience")
}

model Education {
  id        String    @id @default(cuid(2))
  degree    String?
  school    String?
  startDate DateTime? @map("start_date")
  endDate   DateTime? @map("end_date")
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  resumeId  String    @map("resume_id")
  resume    Resume    @relation(fields: resumeId, references: [id])

  @@map("education")
}

model UserSubscription {
  id                      String   @id @default(cuid(2))
  userId                  String   @unique @map("user_id")
  stripeCustomerId        String   @unique @map("stripe_customer_id")
  stripeSubscriptionId    String   @unique @map("stripe_subscription_id")
  stripePriceId           String   @map("stripe_price_id")
  stripeCurrentPeriodEnd  DateTime @map("stripe_current_period_end")
  stripeCancelAtPeriodEnd Boolean  @default(false)
  createdAt               DateTime @default(now()) @map("created_at")
  updatedAt               DateTime @updatedAt @map("updated_at")

  @@map("user_subscriptions")
}
